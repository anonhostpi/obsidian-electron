name: Release Obsidian plugin

on:
  push:
    tags:
      - '*'

env:
  PLUGIN_NAME: Exposed Internals

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup environment
        id: setup_env
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PLUGIN_REPO=$(basename ${{ github.repository }})
          PLUGIN_AUTHOR="${{ github.repository_owner }}"
          PLUGIN_AUTHORURL="https://github.com/${PLUGIN_AUTHOR}"
          PLUGIN_REPOURL="${PLUGIN_AUTHORURL}/${PLUGIN_REPO}"
          PLUGIN_VERSION=${{ github.ref_name }}
          PLUGIN_DESCRIPTION=$(gh repo view "${PLUGIN_AUTHOR}/${PLUGIN_REPO}" --json description --jq .description)
          PLUGIN_LICENSE=$(gh repo view "${PLUGIN_AUTHOR}/${PLUGIN_REPO}" --json licenseInfo --jq '.licenseInfo.name')
          PLUGIN_ID=${PLUGIN_REPO#obsidian-}
          PLUGIN_MINAPPVERSION="1.0.0"
          echo "PLUGIN_REPO=${PLUGIN_REPO}" >> $GITHUB_ENV
          echo "PLUGIN_AUTHOR=${PLUGIN_AUTHOR}" >> $GITHUB_ENV
          echo "PLUGIN_AUTHORURL=${PLUGIN_AUTHORURL}" >> $GITHUB_ENV
          echo "PLUGIN_REPOURL=${PLUGIN_REPOURL}" >> $GITHUB_ENV
          echo "PLUGIN_VERSION=${PLUGIN_VERSION}" >> $GITHUB_ENV
          echo "PLUGIN_DESCRIPTION=${PLUGIN_DESCRIPTION}" >> $GITHUB_ENV
          echo "PLUGIN_LICENSE=${PLUGIN_LICENSE}" >> $GITHUB_ENV
          echo "PLUGIN_ID=${PLUGIN_ID}" >> $GITHUB_ENV
          echo "PLUGIN_MINAPPVERSION=${PLUGIN_MINAPPVERSION}" >> $GITHUB_ENV

      - name: Populate and push manifest.json and package.json
        run: |
          MANIFEST_JSON=$(cat manifest.template.json)
          jq -n \
            --arg name "${{ env.PLUGIN_NAME }}" \
            --arg repo "${PLUGIN_REPO}" \
            --arg author "${PLUGIN_AUTHOR}" \
            --arg authorUrl "${PLUGIN_AUTHORURL}" \
            --arg repoUrl "${PLUGIN_REPOURL}" \
            --arg version "${PLUGIN_VERSION}" \
            --arg description "${PLUGIN_DESCRIPTION}" \
            --arg license "${PLUGIN_LICENSE}" \
            --arg id "${PLUGIN_ID}" \
            --arg minAppVersion "${PLUGIN_MINAPPVERSION}" \
            --argjson isDesktopOnly true \
            "${MANIFEST_JSON}" > manifest.json
          PACKAGE_JSON=$(cat package.template.json)
          jq -n \
            --arg name "${{ env.PLUGIN_NAME }}" \
            --arg repo "${PLUGIN_REPO}" \
            --arg author "${PLUGIN_AUTHOR}" \
            --arg authorUrl "${PLUGIN_AUTHORURL}" \
            --arg repoUrl "${PLUGIN_REPOURL}" \
            --arg version "${PLUGIN_VERSION}" \
            --arg description "${PLUGIN_DESCRIPTION}" \
            --arg license "${PLUGIN_LICENSE}" \
            --arg id "${PLUGIN_ID}" \
            --arg minAppVersion "${PLUGIN_MINAPPVERSION}" \
            "${PACKAGE_JSON}" > package.json
          git checkout -b dev && git commit -am "chore: :bookmark: bump manifests" && git push origin dev

      - name: Build plugin
        id: build
        run: |
          npm install
          npm run build
          mkdir ${PLUGIN_ID}
          cp -r dist/main.js dist/manifest.json dist/package.json dist/src ${PLUGIN_ID}
          zip -r ${PLUGIN_ID}.zip ${PLUGIN_ID}

      - name: Create release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="${GITHUB_REF#refs/tags/}"

          gh release create "$tag" \
            --title="$tag" \
            --draft \
            dist/main.js dist/manifest.json ${PLUGIN_ID}.zip

      - name: Sync to main branch
        run: |
          git fetch --all
          git checkout -b main origin/main
          git checkout origin/dev -- main.js manifest.json package.json src .github
          git add main.js manifest.json package.json src .github
          git commit -m "chore: :bookmark: sync release to main"
          git push origin main
